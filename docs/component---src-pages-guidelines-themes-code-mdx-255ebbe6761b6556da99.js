(window.webpackJsonp=window.webpackJsonp||[]).push([[2042],{"1Qw9":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return O}));t("3bBZ"),t("q1tI");var a=t("7ljp"),r=t("013z");t("qKvR");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const s={},b=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",n)},l=b("PageDescription"),i=b("InlineNotification"),m=b("AnchorLinks"),p=b("AnchorLink"),u=b("Row"),h=b("Column"),d=b("ResourceCard"),g=b("MdxIcon"),y={_frontmatter:s},j=r.a;function O(e){let{components:n}=e,t=c(e,["components"]);return Object(a.b)(j,o({},y,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)(l,{mdxType:"PageDescription"},Object(a.b)("p",null,"Use the themes package to customize your product while maintaining consistency.")),Object(a.b)(i,{mdxType:"InlineNotification"},Object(a.b)("p",null,"If you’re using carbon-components there’s no reason to install the themes\npackage separately. See our ",Object(a.b)("a",o({parentName:"p"},{href:"/get-started/develop/react"}),"get started")," guide to\nstart building.")),Object(a.b)(m,{mdxType:"AnchorLinks"},Object(a.b)(p,{mdxType:"AnchorLink"},"Get started"),Object(a.b)(p,{mdxType:"AnchorLink"},"Usage"),Object(a.b)(p,{mdxType:"AnchorLink"},"Resources")),Object(a.b)("h2",null,"Get started"),Object(a.b)("p",null,"To install ",Object(a.b)("inlineCode",{parentName:"p"},"@carbon/themes")," in your project, you will need to run the following\ncommand using ",Object(a.b)("a",o({parentName:"p"},{href:"https://www.npmjs.com/"}),"npm"),":"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-bash"}),"npm install -S @carbon/themes\n")),Object(a.b)("p",null,"If you prefer ",Object(a.b)("a",o({parentName:"p"},{href:"https://yarnpkg.com/en/"}),"Yarn"),", use the following command\ninstead:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-bash"}),"yarn add @carbon/themes\n")),Object(a.b)("h2",null,"Usage"),Object(a.b)("p",null,"You can use ",Object(a.b)("inlineCode",{parentName:"p"},"@carbon/themes")," in JavaScript or Sass by including this package in\nyour project. By default, ",Object(a.b)("inlineCode",{parentName:"p"},"@carbon/themes")," provides a set of color tokens that\nare pre-defined for a specific theme. Currently, we offer the following color\nthemes: white, gray 10, gray 90, gray 100 ."),Object(a.b)("p",null,"You can preview all of the token values for this on the\n",Object(a.b)("a",o({parentName:"p"},{href:"https://www.carbondesignsystem.com/guidelines/color/usage"}),"Carbon Design System website"),"\n."),Object(a.b)("h3",null,"Sass"),Object(a.b)("p",null,"If you’re project is using Sass, you can include this package and the\ncorresponding default theme by writing the following in your Sass file:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-scss"}),"@import '@carbon/themes/scss/themes';\n")),Object(a.b)("p",null,"By default, the white theme will be initialized. If you would like to include\nanother theme, you can do so by calling our mixin. For example:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-scss"}),"@import '@carbon/themes/scss/themes';\n\n// Use the gray 10 theme\n@include carbon--theme($carbon--theme--g10);\n\n// Use the gray 90 theme\n@include carbon--theme($carbon--theme--g90);\n\n// Use the gray 100 theme\n@include carbon--theme($carbon--theme--g100);\n")),Object(a.b)("p",null,"Alternatively, you can set the global theme variable then call the mixin without\npassing in a theme name."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-scss"}),"@import '@carbon/themes/scss/themes';\n\n$carbon--theme: $carbon--theme--g10;\n\n// Use the gray 10 theme\n@include carbon--theme();\n")),Object(a.b)("p",null,"Inline theming can be done by using the mixin. For example:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-scss"}),"@import '@carbon/themes/scss/themes';\n\n// Use the default white theme here\n\n.my-dark-theme {\n  @include carbon--theme($carbon--theme--g90) {\n    // Use the dark theme here\n  }\n}\n\n.my-darker-theme {\n  @include carbon--theme($carbon--theme--g100) {\n    // Use the darker theme here\n  }\n}\n")),Object(a.b)("h3",null,"JavaScript"),Object(a.b)("p",null,"If you’re looking to use these themes in JavaScript, we export a variety of\nbindings for you to use, including:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"import {\n  // An object of all themes\n  themes,\n\n  // Direct theme values\n  white,\n  g10,\n  g90,\n  g100,\n\n  // Specific token values\n  interactive01,\n  interactive02,\n} from '@carbon/themes';\n")),Object(a.b)("h2",null,"Resources"),Object(a.b)(u,{className:"resource-card-group",mdxType:"Row"},Object(a.b)(h,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},Object(a.b)(d,{subTitle:"Carbon theme package",href:"https://github.com/carbon-design-system/carbon/blob/master/packages/themes",mdxType:"ResourceCard"},Object(a.b)(g,{name:"bee",mdxType:"MdxIcon"}))),Object(a.b)(h,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},Object(a.b)(d,{subTitle:"Themes package demo",href:"https://carbon-elements.netlify.app/themes/examples/preview/",mdxType:"ResourceCard"},Object(a.b)(g,{name:"bee",mdxType:"MdxIcon"})))))}O.isMDXComponent=!0}}]);