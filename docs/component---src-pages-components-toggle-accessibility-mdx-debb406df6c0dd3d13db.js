(window.webpackJsonp=window.webpackJsonp||[]).push([[1980],{"YJe/":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return y}));n("3bBZ"),n("q1tI");var c=n("7ljp"),b=n("013z"),o=n("CpY+"),r=n("5sAZ"),a=n("EQQr");n("qKvR");function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var c in n)Object.prototype.hasOwnProperty.call(n,c)&&(e[c]=n[c])}return e}).apply(this,arguments)}function i(e,t){if(null==e)return{};var n,c,b=function(e,t){if(null==e)return{};var n,c,b={},o=Object.keys(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(c=0;c<o.length;c++)n=o[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(b[n]=e[n])}return b}const l={},d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(c.b)("div",t)},u=d("AnchorLinks"),h=d("AnchorLink"),p=d("Row"),m=d("Column"),O={_frontmatter:l},j=b.a;function y(e){let{components:t}=e,n=i(e,["components"]);return Object(c.b)(j,s({},O,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)(u,{mdxType:"AnchorLinks"},Object(c.b)(h,{mdxType:"AnchorLink"},"How it works"),Object(c.b)(h,{mdxType:"AnchorLink"},"Accessibility considerations"),Object(c.b)(h,{mdxType:"AnchorLink"},"Resources"),Object(c.b)(h,{mdxType:"AnchorLink"},"Accessibility testing")),Object(c.b)("h2",null,"How it works"),Object(c.b)("p",null,"The toggle Carbon component is a control that uses a two state checkbox commonly\nused to switch between two possible states such as on or off. The Tab key is\nused to move focus to each toggle control. Either the Enter or Space key can be\nused to toggle between a checked or unchecked positions. The ARIA state\n",Object(c.b)("inlineCode",{parentName:"p"},'aria-checked="true"')," is set when the toggle switch is checked or in the on\nposition. When the toggle component is unchecked or in the off position, the\nARIA state is set to ",Object(c.b)("inlineCode",{parentName:"p"},'aria-checked="false"'),". A toggle component identified as\ndisabled is ignored in the tab order."),Object(c.b)("h2",null,"Accessibility considerations"),Object(c.b)("p",null,"This component has been validated to meet the\n",Object(c.b)("a",s({parentName:"p"},{href:"https://www.w3.org/TR/WCAG20/"}),"WCAG 2.0 AA")," and\n",Object(c.b)("a",s({parentName:"p"},{href:"http://www.section508.gov/"}),"Section 508")," accessibility guidelines, however\nchanges made by the content owner can affect accessibility compliance. Be sure\nto review and follow the guidance in this section when updating or adding new\ncontent to this component."),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Each toggle control should have a clear and concise label."),Object(c.b)("li",{parentName:"ol"},"Users should be warned if selecting a toggle component will cause a change in\ncontext."),Object(c.b)("li",{parentName:"ol"},"The ",Object(c.b)("inlineCode",{parentName:"li"},"id")," for each component must be unique when more then one Carbon toggle\ncomponent is present on a Web page."),Object(c.b)("li",{parentName:"ol"},"If the toggle is a required field include the\n",Object(c.b)("a",s({parentName:"li"},{href:"https://www.w3.org/TR/WCAG20-TECHS/ARIA2.html"}),"aria-required property")," and\nindicate that it is a required field and use the validation message for input\nerrors.")),Object(c.b)("h2",null,"Resources"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",s({parentName:"li"},{href:"https://www.w3.org/TR/wai-aria-practices/#accordion"}),"W3C WAI-ARIA Authoring Practices Accordion Design Pattern"),"\ncovers the usage of ARIA names, state and roles, as well as the expected\nkeyboard interactions."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",s({parentName:"li"},{href:"https://www.ibm.com/able/guidelines/ci162/accessibility_checklist.html"}),"IBM Accessibility Checklist Checkpoint:"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",s({parentName:"li"},{href:"https://www.ibm.com/able/guidelines/ci162/info_and_relationships.html"}),"1.3.1 Info and Relationships"),"\n(WCAG Success Criteria\n",Object(c.b)("a",s({parentName:"li"},{href:"https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships"}),"1.3.1"),")"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",s({parentName:"li"},{href:"https://www.ibm.com/able/guidelines/ci162/headings_and_labels.html"}),"2.4.6 Headings and Labels"),"\n(WCAG Success Criteria\n",Object(c.b)("a",s({parentName:"li"},{href:"https://www.w3.org/WAI/WCAG21/Understanding/headings-and-labels"}),"2.4.6"),")"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",s({parentName:"li"},{href:"https://www.ibm.com/able/guidelines/ci162/on_input.html"}),"3.2.2 On Input"),"\n(WCAG Success Criteria\n",Object(c.b)("a",s({parentName:"li"},{href:"https://www.w3.org/WAI/WCAG21/Understanding/on-input"}),"3.2.2"),")"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",s({parentName:"li"},{href:"https://www.ibm.com/able/guidelines/ci162/name_role_value.html"}),"4.1.2 Name, Role, Value"),"\n(WCAG Success Criteria\n",Object(c.b)("a",s({parentName:"li"},{href:"https://www.w3.org/TR/UNDERSTANDING-WCAG20/ensure-compat-rsv.html"}),"4.1.2"),")")))),Object(c.b)("h2",null,"Accessibility testing"),Object(c.b)("p",null,"Accessibility issues are tracked in the\n",Object(c.b)("a",s({parentName:"p"},{href:"https://github.com/carbon-design-system/carbon/milestones"}),"Carbon Component GitHub repository"),"."),Object(c.b)("h3",null,"Automated test"),Object(c.b)(p,{mdxType:"Row"},Object(c.b)(m,{noGutterSm:!0,mdxType:"Column"},Object(c.b)(o.f,{mdxType:"StructuredListWrapper"},Object(c.b)(o.c,{mdxType:"StructuredListHead"},Object(c.b)(o.e,{head:!0,mdxType:"StructuredListRow"},Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Automated test environment"),Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Results"))),Object(c.b)(o.a,{mdxType:"StructuredListBody"},Object(c.b)(o.e,{mdxType:"StructuredListRow"},Object(c.b)(o.b,{mdxType:"StructuredListCell"},"- macOS Mojave version 10.14.6 with VoiceOver",Object(c.b)("br",null),"- Chrome version 77.0.3865.90",Object(c.b)("br",null),"- Dynamic Assessment Plugin (DAP) version 1.8.0.0 - IBM Accessibility WCAG 2.1 Sept. 2019 Ruleset",Object(c.b)("br",null),"- Carbon React version 7.7.1"),Object(c.b)(o.b,{mdxType:"StructuredListCell"},Object(c.b)("strong",null,"DAP test:"),Object(c.b)("br",null),"- No violations")))))),Object(c.b)("h3",null,"macOS screen reader tests"),Object(c.b)(p,{mdxType:"Row"},Object(c.b)(m,{noGutterSm:!0,mdxType:"Column"},Object(c.b)(o.f,{mdxType:"StructuredListWrapper"},Object(c.b)(o.c,{mdxType:"StructuredListHead"},Object(c.b)(o.e,{head:!0,mdxType:"StructuredListRow"},Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Environment "),Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Results"))),Object(c.b)(o.a,{mdxType:"StructuredListBody"},Object(c.b)(o.e,{mdxType:"StructuredListRow"},Object(c.b)(o.b,{mdxType:"StructuredListCell"},"- macOS Mojave version 10.14.6 with VoiceOver",Object(c.b)("br",null),"- Chrome version 77.0.3865.90",Object(c.b)("br",null),"- Carbon React version 7.7.1"),Object(c.b)(o.b,{mdxType:"StructuredListCell"},Object(c.b)("strong",null,"VoiceOver(VO) Test:"),Object(c.b)(r.a,{mdxType:"OrderedList"},Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Tab key to navigate to the first toggle component. VO announces the label as Off, the state as unchecked, and that it is a checkbox."),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Space key to change the state of the toggle component On and Off."),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Tab key to navigate to the labeled toggle component. VO announces the label as Off, the state as unchecked, that it is a checkbox and the label."),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Tab key and the disabled toogle component is skipped."),Object(c.b)(a.a,{mdxType:"ListItem"},"Control-Option-Left arrow key back to the disabled toggle component. VO announces that it is a disabled checkbox, dimmed unchecked checkbox.")))),Object(c.b)(o.e,{mdxType:"StructuredListRow"},Object(c.b)(o.b,{mdxType:"StructuredListCell"},"- macOS Mojave version 10.14.6 with VoiceOver",Object(c.b)("br",null),"- Safari version 13.0.2",Object(c.b)("br",null),"- Carbon React version 7.7.1"),Object(c.b)(o.b,{mdxType:"StructuredListCell"},Object(c.b)("strong",null,"VoiceOver(VO) test:"),Object(c.b)(r.a,{mdxType:"OrderedList"},Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Tab key to navigate to the first toggle component. VO announces the label as off, the state as unchecked, and that it is a checkbox."),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Space key to change the state of the toggle component on and off."),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Tab key to navigate to the labeled toggle component. VO announces the label as off, the state as unchecked, that it is a checkbox and the label."),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Tab key and the disabled toogle component is skipped."),Object(c.b)(a.a,{mdxType:"ListItem"},"Control-Option-Left arrow key back to the disabled toggle component. VO announces that it is an off, dimmed unchecked checkbox.")))))))),Object(c.b)("h3",null,"Windows screen reader tests"),Object(c.b)(p,{mdxType:"Row"},Object(c.b)(m,{noGutterSm:!0,mdxType:"Column"},Object(c.b)(o.f,{mdxType:"StructuredListWrapper"},Object(c.b)(o.c,{mdxType:"StructuredListHead"},Object(c.b)(o.e,{head:!0,mdxType:"StructuredListRow"},Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Environment"),Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Results"))),Object(c.b)(o.a,{mdxType:"StructuredListBody"},Object(c.b)(o.e,{mdxType:"StructuredListRow"},Object(c.b)(o.b,{mdxType:"StructuredListCell"},"- Microsoft Windows 10",Object(c.b)("br",null),"- JAWS 19.1810.64",Object(c.b)("br",null),"- Chrome version 73.0.3683.103 (Official Build) (64-bit)",Object(c.b)("br",null),"- Carbon React version 7.7.1"),Object(c.b)(o.b,{mdxType:"StructuredListCell"},Object(c.b)("strong",null,"JAWS test:"),Object(c.b)(r.a,{mdxType:"OrderedList"},Object(c.b)(a.a,{mdxType:"ListItem"},"Navigate among the toggle component by pressing the Tab and Shift-Tab keys, or X and Shift+X keys to jump to next or previous checkboxes."),Object(c.b)(a.a,{mdxType:"ListItem"},"When navigating to a toggle, JAWS announces the label, checkbox, and the status of the checkbox."),Object(c.b)(a.a,{mdxType:"ListItem"},'Disabled toggle components can only be found by using the Up and Down Arrow keys, when JAWS announces "disabled checkbox checkbox unchecked unavailable".'),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Space key to select or deselect the toggle. JAWS announces the status of checked or unchecked.")))),Object(c.b)(o.e,{mdxType:"StructuredListRow"},Object(c.b)(o.b,{mdxType:"StructuredListCell"},"- Microsoft Windows 10",Object(c.b)("br",null),"- NVDA version 2018.4.1",Object(c.b)("br",null),"- Chrome version 72.0.3683.103 (Official Build) (64-bit)",Object(c.b)("br",null),"- Carbon React version 7.7.1"),Object(c.b)(o.b,{mdxType:"StructuredListCell"},Object(c.b)("strong",null,"NVDA test:"),Object(c.b)(r.a,{mdxType:"OrderedList"},Object(c.b)(a.a,{mdxType:"ListItem"},"Navigate among the toggle components by pressing the Tab and Shift-Tab keys, or X and Shift+X keys to jump to next or previous checkboxes."),Object(c.b)(a.a,{mdxType:"ListItem"},"When navigating to a toggle, NVDA announces the label, checkbox, and the status of the checkbox, but repeats the information twice."),Object(c.b)(a.a,{mdxType:"ListItem"},'Disabled toggle components can only be found by using the Up and Down Arrow keys, or the the X and Shift+X keys. NVDA announces "checkbox unavailable not checked disabled checkbox".'),Object(c.b)(a.a,{mdxType:"ListItem"},"Press the Space or Enter key to select or deselect the toggle. NVDA announces the status of checked or unchecked.")))))))),Object(c.b)("h3",null,"iOS screen reader tests"),Object(c.b)(p,{mdxType:"Row"},Object(c.b)(m,{noGutterSm:!0,mdxType:"Column"},Object(c.b)(o.f,{mdxType:"StructuredListWrapper"},Object(c.b)(o.e,{head:!0,mdxType:"StructuredListRow"},Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Environment "),Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Results")),Object(c.b)(o.a,{mdxType:"StructuredListBody"},Object(c.b)(o.e,{mdxType:"StructuredListRow"},Object(c.b)(o.b,{mdxType:"StructuredListCell"},"- iOS version 13.1.3 with VoiceOver",Object(c.b)("br",null),"- Safari version 13.1.3",Object(c.b)("br",null),"- Carbon React version 7.7.1"),Object(c.b)(o.b,{mdxType:"StructuredListCell"},Object(c.b)("strong",null,"VoiceOver test:"),Object(c.b)(r.a,{mdxType:"OrderedList"},Object(c.b)(a.a,{mdxType:"ListItem"},"Navigate to the toggle components by swiping left or right, or press the Left or Right Arrow keys when quick navigation is turned on. VO announces,the label, field type, and the status of the checkbox."),Object(c.b)(a.a,{mdxType:"ListItem"},"When tapping on a toggle, or pressing VO+Space, VoiceOver announces the new status of the toggle component as checked or unchecked.")))))))),Object(c.b)("h3",null,"Android screen reader tests"),Object(c.b)(p,{mdxType:"Row"},Object(c.b)(m,{noGutterSm:!0,mdxType:"Column"},Object(c.b)(o.f,{mdxType:"StructuredListWrapper"},Object(c.b)(o.c,{mdxType:"StructuredListHead"},Object(c.b)(o.e,{head:!0,mdxType:"StructuredListRow"},Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Environment "),Object(c.b)(o.b,{head:!0,mdxType:"StructuredListCell"},"Results"))),Object(c.b)(o.a,{mdxType:"StructuredListBody"},Object(c.b)(o.e,{mdxType:"StructuredListRow"},Object(c.b)(o.b,{mdxType:"StructuredListCell"},"- Android version 9 with Talkback",Object(c.b)("br",null),"- Chrome version 72.0.3683.103 (Official Build) (64-bit)",Object(c.b)("br",null),"- Carbon React version 7.7.1"),Object(c.b)(o.b,{mdxType:"StructuredListCell"},Object(c.b)("strong",null,"Talkback test:"),Object(c.b)(r.a,{mdxType:"OrderedList"},Object(c.b)(a.a,{mdxType:"ListItem"},"Navigate to the toggle components by swiping left or right, or press the Left or Right Arrow keys. Talkback announces,the label, field type, and the status of the checkbox."),Object(c.b)(a.a,{mdxType:"ListItem"},"When tapping on a toggle, or pressing the Alt-Enter keys, Talkback announces the new status of the toggle component as checked or not checked.")))))))))}y.isMDXComponent=!0}}]);