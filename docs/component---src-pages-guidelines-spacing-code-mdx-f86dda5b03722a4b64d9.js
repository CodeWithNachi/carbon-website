(window.webpackJsonp=window.webpackJsonp||[]).push([[2040],{je7v:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return h}));n("3bBZ"),n("q1tI");var a=n("7ljp"),r=n("013z");n("qKvR");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const i={},l=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",t)},c=l("PageDescription"),p=l("InlineNotification"),s=l("AnchorLinks"),u=l("AnchorLink"),d=l("Row"),m=l("Column"),g=l("ResourceCard"),O=l("MdxIcon"),j={_frontmatter:i},f=r.a;function h(e){let{components:t}=e,n=b(e,["components"]);return Object(a.b)(f,o({},j,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(c,{mdxType:"PageDescription"},Object(a.b)("p",null,"The Carbon layout package helps teams build consistent experiences through\nspacing and alignment.")),Object(a.b)(p,{mdxType:"InlineNotification"},Object(a.b)("p",null,"If you’re using carbon-components there’s no reason to install the layout\npackage separately. See our ",Object(a.b)("a",o({parentName:"p"},{href:"/get-started/develop/react"}),"get started")," guide to\nstart building.")),Object(a.b)(s,{mdxType:"AnchorLinks"},Object(a.b)(u,{mdxType:"AnchorLink"},"Get started"),Object(a.b)(u,{mdxType:"AnchorLink"},"Usage"),Object(a.b)(u,{mdxType:"AnchorLink"},"Resources")),Object(a.b)("h2",null,"Get started"),Object(a.b)("p",null,"To install ",Object(a.b)("inlineCode",{parentName:"p"},"@carbon/layout")," in your project, you will need to run the following\ncommand using ",Object(a.b)("a",o({parentName:"p"},{href:"https://www.npmjs.com/"}),"npm"),":"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-bash"}),"npm install -S @carbon/layout\n")),Object(a.b)("p",null,"If you prefer ",Object(a.b)("a",o({parentName:"p"},{href:"https://yarnpkg.com/en/"}),"Yarn"),", use the following command\ninstead:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-bash"}),"yarn add @carbon/layout\n")),Object(a.b)("h2",null,"Usage"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"@carbon/layout")," provides a couple of useful utilities alongside the\nspecification for the grid system for the IBM Design Language. This package\nincludes:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",o({parentName:"tr"},{align:null}),"Feature"),Object(a.b)("th",o({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",o({parentName:"tr"},{align:null}),"Breakpoints"),Object(a.b)("td",o({parentName:"tr"},{align:null}),"Variables and settings for the IBM Design Grid, including gutter and breakpoints. It also includes helpers for working with breakpoints")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",o({parentName:"tr"},{align:null}),"Unit conversion"),Object(a.b)("td",o({parentName:"tr"},{align:null}),"Helpers for converting from ",Object(a.b)("inlineCode",{parentName:"td"},"px")," to ",Object(a.b)("inlineCode",{parentName:"td"},"rem")," or ",Object(a.b)("inlineCode",{parentName:"td"},"em"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",o({parentName:"tr"},{align:null}),"Key heights"),Object(a.b)("td",o({parentName:"tr"},{align:null}),"Helpers for working with key heights at different breakpoints")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",o({parentName:"tr"},{align:null}),"Mini unit"),Object(a.b)("td",o({parentName:"tr"},{align:null}),"Helpers for working in multiples of the mini-unit")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",o({parentName:"tr"},{align:null}),"Spacing"),Object(a.b)("td",o({parentName:"tr"},{align:null}),"Provides a spacing scale and helper for using steps in the scale")))),Object(a.b)("p",null,"One important thing to remember is that ",Object(a.b)("inlineCode",{parentName:"p"},"@carbon/layout")," is not responsible for\nthe grid itself. If you are looking for a grid implementation to use, definitely\ncheckout the ",Object(a.b)("a",o({parentName:"p"},{href:"../grid"}),Object(a.b)("inlineCode",{parentName:"a"},"@carbon/grid"))," package."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"@carbon/layout")," provides the above features in both Sass and JavaScript. If\nyou’re looking for support in a different language, feel free to file an issue\nproposing the new addition!"),Object(a.b)("h2",null,"Resources"),Object(a.b)(d,{className:"resource-card-group",mdxType:"Row"},Object(a.b)(m,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},Object(a.b)(g,{subTitle:"Carbon layout package",href:"https://github.com/carbon-design-system/carbon/blob/master/packages/layout",mdxType:"ResourceCard"},Object(a.b)(O,{name:"bee",mdxType:"MdxIcon"}))),Object(a.b)(m,{colMd:4,colLg:4,noGutterSm:!0,mdxType:"Column"},Object(a.b)(g,{subTitle:"Layout package demo",href:"https://carbon-elements.netlify.app/layout/examples/preview/",mdxType:"ResourceCard"},Object(a.b)(O,{name:"bee",mdxType:"MdxIcon"})))))}h.isMDXComponent=!0}}]);